/******************************************************************************

  C_SocketFactory

  Класс-фабрика для создания сокетов, реализующих интерфейс I_Socket

*******************************************************************************/

#include "C_SocketFactory.h"

#include "C_TcpSocket.h"
#include "C_UdpSocket.h"

namespace network {

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

/*****************************************************************************
  Forward Declarations
*****************************************************************************/

/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Definitions
*****************************************************************************/

/*****************************************************************************
  Functions Definitions
*****************************************************************************/

/*****************************************************************************
 * Фабричная функция для создания cокетов
 *
 * Создание объекта типа I_Socket, реализующего интерфейс I_Socket
 *
 * @param
 *  [in] a_protocol  - тип протокола, сокет которого необходимо создать
 *  [in] a_sockType  - тип сокета (клиенсткий или серверный, см. common_types.h)
 *
 * @return
 *  - указатель на сокет I_Socket, помещенный в std::shared_ptr<I_Socket>
 */
std::shared_ptr<I_Socket>
C_SocketFactory::createSocket( E_Protocol a_protocol )
{
    switch ( a_protocol ) {
        case E_Protocol::TCP:
            return std::make_shared<C_TcpSocket>();
        case E_Protocol::UDP:
            return std::make_shared<C_UdpSocket>();
        default:
            return std::make_shared<C_UdpSocket>();
    }
}

} // namespace network
