/*****************************************************************************

  C_TcpSocket

  Класс TCP-сокета, реализующий интерфейс I_Socket поверх системной библиотеки
  сокетов ОС Windows - WINSOCK

  ОПИСАНИЕ

  * TCP-сокет представляет собой сетевой интерфейс для взаимодействия по
    TCP-протоколу


  ИСПОЛЬЗОВАНИЕ

  * Использование объектов класса C_TcpSocket равносильно работе с объектами,
    реализующими интерфейс I_Socket (см. I_Socket)

*****************************************************************************/

#pragma once

#include <winsock2.h>

#include "C_Socket.h"
#include "C_Logger.h"

namespace network {

using namespace services;

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

/*****************************************************************************
  Forward Declarations
*****************************************************************************/

/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

/*****************************************************************************
 * Класс TCP-сокета, реализующий интерфейс I_Socket поверх системной библиотеки
 * сокетов ОС Windows - WINSOCK
 */
class C_TcpSocket : public C_Socket
{

public:

    C_TcpSocket() : C_Socket( E_Protocol::TCP, "tcp socket" ) { }
    virtual ~C_TcpSocket() override;

    /**
     * Реализация интерфейса I_Socket
     */

    // Закрытие сокета
    virtual void close() override;

    /**
     * Отправка и прием данных
     */

    virtual bool send( const std::vector<char> &a_buff ) override;
    virtual bool recv(       std::vector<char> &a_buff ) override;

    // Инициализация соединения
    virtual bool connect() override;

protected:

    // Установка соединения с сервером (для клиентского сокета)
    bool connectToServer();

    // Установка соединения с клиентом (для серверного сокета)
    bool connectToClient();

private:

    // Настройка дополнительных параметров сокета
    virtual bool setSockOptions() override;

    // Установка прослушивания входящих соединений
    bool listen( int a_backlog );

    // Принятие соединения
    bool accept();

private:

    SOCKET  m_acceptedSocket;       // Файловый дескриптор сокета приема-отправки
    int     m_backlog = 5;          // Количество возможных соединений

};

/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Definitions
*****************************************************************************/

/*****************************************************************************
  Inline Functions Definitions
*****************************************************************************/

} // namespace network
